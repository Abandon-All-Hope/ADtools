#!/bin/bash
MHOME=$HOME
# echo ${MHOME}
if [ ! -d $HOME/ldif ] ; then mkdir ${MHOME}/ldif ; fi
if [ ! -d $HOME/passwd ] ; then mkdir ${MHOME}/passwd ; fi
klist -s || kinit
IFS='
'
if test -z "$5" ; then echo "$0 username name description [Y/N] lab"; exit ; fi
OU=Users,OU=SciComp
# URI='OU=Departments,OU=Domain Members,DC=med,DC=upenn,DC=edu'
URI='OU=PMACS,DC=pmacs,DC=upenn,DC=edu'
maildomain=upenn.edu
# Description="Hematology-Oncology Cancer Biology user"
Description="$3"
GROUPCAT='CN=Group,CN=Schema,CN=Configuration,DC=pmacs,DC=upenn,DC=edu'
GROUPADD='CN=CGACTAccess,OU=Groups,OU=SciComp,OU=PMACS,DC=pmacs,DC=upenn,DC=edu'
if test -n "$1" ; then NEWUSER="$1" ; fi
if test -n "`getent passwd $NEWUSER`" ; then echo $NEWUSER already exists ; exit; fi
if test -n "$2" ; then GECOS="$2" ; fi
INPUT=${NEWUSER}.passwd
CREATE="${INPUT}.ldif"
MODIFY="${INPUT}_mod.ldif"
CLUST="${INPUT}_clust.ldif"
UGroup="${INPUT}_ugroup.ldif"
LDIR=ldif
TDIR=tmp
PDIR=passwd
ADHOST=smithers.pmacs.upenn.edu
sudo sss_cache -G -d PMACS
sudo sss_cache -U -d PMACS
NEWID=`getnewid.sh`
SHELL=/bin/bash
NHOME=/home/$NEWUSER
echo $INPUT $GECOS $NEWID $SHELL $NHOME
echo "$NEWUSER:"'*'":$NEWID:$NEWID:$GECOS:$NHOME:$SHELL"
echo "$NEWUSER:"'*'":$NEWID:$NEWID:$GECOS:$NHOME:$SHELL" > "${MHOME}/${PDIR}/${INPUT}"
INPUT="${MHOME}/${PDIR}/${INPUT}"
echo $INPUT

CREATE="${MHOME}/${LDIR}/$CREATE"
MODIFY="${MHOME}/${LDIR}/$MODIFY"
CLUST="${MHOME}/${LDIR}/$CLUST"
UGroup="${MHOME}/${LDIR}/$UGroup"
UNIX=Y
rm -rf $MODIFY $CREATE $CLUST $UGroup
echo $MODIFY $CREATE $CLUST $UGroup
# exit

# read the input file and make the fields
for i in `cat $INPUT` ; do 
uname=`echo $i|awk -F: '{print $1}'`; 
uid=`echo $i|awk -F: '{print $3}'`;
gid=`echo $i|awk -F: '{print $4}'`;
gcos=`echo $i|awk -F: '{print $5}'`;
C=`echo $gcos|wc -c`;
first=`echo $gcos|awk '{print $1}'`;
C=`echo $gcos|wc -w`;
if [ "$C" == 2 ] ; then last=`echo $gcos|awk '{print $2}'`; fi
if [ "$C" == 3 ] ; then last=`echo $gcos|awk '{print $3}'`; fi
if [ "$C" == 4 ] ; then last=`echo $gcos|awk '{print $4}'`; fi
# last=`echo $gcos|awk '{print $3}'`; 
# CN="CN=$gcos,OU=Users,OU=$OU,$URI";
CN="CN=$gcos,OU=$OU,$URI";

echo CREATE SECTION $uname
echo dn: "$CN"  >> $CREATE
/bin/echo -e "objectClass: top\nobjectClass: person\nobjectClass: organizationalPerson\nobjectClass: user"  >> $CREATE
echo cn: $gcos  >> $CREATE
echo sn: $last  >> $CREATE
echo description: $Description  >> $CREATE
echo givenName: $first  >> $CREATE
echo distinguishedName: $CN  >> $CREATE
echo displayName: $gcos  >> $CREATE 
echo name: $gcos  >> $CREATE
echo "" >> $CREATE

echo MOD SECTION $uname
# /bin/echo -e " dn: $CN\nchangetype: modify\nreplace: givenName\ngivenName: $last\n" >> $MODIFY
/bin/echo -e " dn: $CN\nchangetype: modify\nreplace: sAMAccountName\nsAMAccountName: $uname\n" >> $MODIFY
/bin/echo -e " dn: $CN\nchangetype: modify\nreplace: userPrincipalName\nuserPrincipalName: ${uname}@pmacs.upenn.edu\n" >> $MODIFY
if [ "$UNIX" == "Y" ] ; then /bin/echo -e " dn: $CN\nchangetype: modify\nreplace: uid\nuid: $uname\n" >> $MODIFY ; fi
/bin/echo -e " dn: $CN\nchangetype: modify\nreplace: mail\nmail: $uname@$maildomain\n" >> $MODIFY
if [ "$UNIX" == "Y" ] ; then  /bin/echo -e " dn: $CN\nchangetype: modify\nreplace: uidNumber\nuidNumber: $uid\n" >> $MODIFY  ; fi
if [ "$UNIX" == "Y" ] ; then  /bin/echo -e " dn: $CN\nchangetype: modify\nreplace: gidNumber\ngidNumber: $uid\n" >> $MODIFY  ; fi
if [ "$UNIX" == "Y" ] ; then  /bin/echo -e " dn: $CN\nchangetype: modify\nreplace: unixHomeDirectory\nunixHomeDirectory: /home/$uname\n" >> $MODIFY  ; fi
if [ "$UNIX" == "Y" ] ; then  /bin/echo -e " dn: $CN\nchangetype: modify\nreplace: loginShell\nloginShell: /bin/bash\n" >> $MODIFY  ; fi
/bin/echo -e " dn: $CN\nchangetype: modify\nreplace: userAccountControl\nuserAccountControl: 544\n" >> $MODIFY

#make unique usergroup
echo Make usergroup SECTION $uname
echo dn: "CN=$uname,OU=Unix User Groups,$URI"  >> $UGroup
echo objectClass: top  >> $UGroup
echo objectClass: group >> $UGroup
echo cn: $uname  >> $UGroup
echo distinguishedName: CN=$uname,OU=$URI  >> $UGroup
echo name: $uname  >> $UGroup
echo sAMAccountName: ug-$uname  >> $UGroup
echo objectCategory: $GROUPCAT >> $UGroup
echo gidNumber: $uid >> $UGroup
echo member: $CN  >> $UGroup
echo "" >> $UGroup
done
#put in  cluster
echo put in clustergroup SECTION $uname
IFS='
'
for i in `grep dn: $CREATE|awk -F: '{print $2}'` ; do 
echo dn: $GROUPADD >> $CLUST
echo changetype: modify>> $CLUST
echo add: member>> $CLUST
echo member: $i>> $CLUST
echo "" >> $CLUST
done

echo add to group $5 SECTION $uname
if test -n "$5" ; then
LAB=$5
GMODIFY="${NEWUSER}_labmod.ldif"
GMODIFY="${MHOME}/${LDIR}/$GMODIFY"
if [ -r "${MHOME}/${LDIR}/$GMODIFY" ] ; then rm "${MHOME}/${LDIR}/$GMODIFY" ; fi
GCN=`ldapsearch -LLL -Q -b OU=PMACS,DC=pmacs,DC=upenn,DC=edu CN=$LAB|grep dn:`
if test -n "$GCN" ; then
/bin/echo -e "$GCN\nchangetype: modify\nadd: member\nmember: $CN\n" >> $GMODIFY
else
echo "$LAB does not exist, would you like to create $LAB ?"
read gans
if [ "$gans" = "Y" ] || [ "$gans" = "y" ] ; then echo we will make a new group now ; 
echo Make NEW LAB SECTION LAB
GS="OU=Groups,OU=SciComp,OU=PMACS,DC=pmacs,DC=upenn,DC=edu"
echo dn: "CN=$LAB,$GS"  >> $GMODIFY
echo objectClass: top  >> $GMODIFY
echo objectClass: group >> $GMODIFY
echo cn: $LAB  >> $GMODIFY
echo "distinguishedName: CN=${LAB},${GS}"  >> $GMODIFY
echo name: $LAB  >> $GMODIFY
echo sAMAccountName: $LAB  >> $GMODIFY
echo objectCategory: $GROUPCAT >> $GMODIFY
GIDNO=`getnewid.sh`
echo gidNumber: $GIDNO >> $GMODIFY
echo member: $CN  >> $GMODIFY
echo "" >> $GMODIFY
fi
fi
fi

# doin it
echo ldapadd -c -h $ADHOST -f $CREATE
echo ldapadd -c -h $ADHOST -f $CREATE > ${MHOME}/runmkuser.sh

# echo modify users
echo ldapmodify -c -h $ADHOST -f $MODIFY
echo ldapmodify -c -h $ADHOST   -f $MODIFY >> ${MHOME}/runmkuser.sh

# echo create users unix group
echo ldapadd -c -h $ADHOST -f $UGroup
echo ldapadd -c -h $ADHOST -f $UGroup >> ${MHOME}/runmkuser.sh


# echo add users to a group
echo ldapmodify -c -h $ADHOST -f $CLUST
echo ldapmodify -c -h $ADHOST -f $CLUST >> ${MHOME}/runmkuser.sh

# echo add users to a lab
if test -n "$5" ; then
if [ "$gans" = "Y" ] ; then
echo ldapadd -c -h $ADHOST -f $GMODIFY
echo ldapadd -c -h $ADHOST -f $GMODIFY >> ${MHOME}/runmkuser.sh
else
echo ldapmodify -c -h $ADHOST -f $GMODIFY
echo ldapmodify -c -h $ADHOST -f $GMODIFY >> ${MHOME}/runmkuser.sh
fi
fi
echo sudo sss_cache -G -d PMACS >> ${MHOME}/runmkuser.sh
echo sudo sss_cache -U -d PMACS >> ${MHOME}/runmkuser.sh
echo getent passwd $uname >> ${MHOME}/runmkuser.sh

chmod 755 ${MHOME}/runmkuser.sh
ans=$4
if test -z "$4" ; then
echo "do you want to create? Y/N"
read ans
fi
if [ "$ans" = "Y" ] || [ "$ans" = "y" ]; then 
echo you said yes 
cat ${MHOME}/runmkuser.sh
${MHOME}/runmkuser.sh
# getent passwd $uname
fi

